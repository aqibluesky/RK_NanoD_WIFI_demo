//*@@@+++@@@@******************************************************************
//
// Microsoft Windows Media
// Copyright (C) Microsoft Corporation. All rights reserved.
//
//*@@@---@@@@******************************************************************
#ifndef __WMCGUIDS__
#define __WMCGUIDS__
//#pragma pack (1)

//#include "wmc_type.h"

#ifndef GUID_WMC_DEFINED
#define GUID_WMC_DEFINED
typedef  struct _GUID_WMC {          // size is 16
    U32_WMC   Data1;
    U16_WMC    Data2;
    U16_WMC    Data3;
    U8_WMC    Data4[8];
} GUID_WMC;
#endif // GUID_WMC_DEFINED

#ifdef INITGUID_WMC
#define DEFINE_GUID_WMC(name, l, w1, w2, b1, b2, b3, b4, b5, b6, b7, b8) \
        extern  GUID_WMC name \
                = { l, w1, w2, { b1, b2,  b3,  b4,  b5,  b6,  b7,  b8 } }
#else // INITGUID_WMC
#define DEFINE_GUID_WMC(name, l, w1, w2, b1, b2, b3, b4, b5, b6, b7, b8) \
        extern  GUID_WMC name
#endif // INITGUID_WMC

#ifndef IsEqualGUID_WMC
#define IsEqualGUID_WMC(rguid1, rguid2) (!memcmp(rguid1, rguid2, sizeof(GUID)))
#endif // IsEqualGUID_WMC

DEFINE_GUID_WMC(CLSID_CAsfNullClockType,
    0x1d70b760,0x748e,0x11cf,0x9c,0x0f,0x00,0xa0,0xc9,0x03,0x49,0xcb);

DEFINE_GUID_WMC(CLSID_CAsfHeaderObjectV0,
    0x75b22630,0x668e,0x11cf,0xa6,0xd9,0x00,0xaa,0x00,0x62,0xce,0x6c);

DEFINE_GUID_WMC(CLSID_CAsfPropertiesObjectV0,
    0x75b22631,0x668e,0x11cf,0xa6,0xd9,0x00,0xaa,0x00,0x62,0xce,0x6c);

DEFINE_GUID_WMC(CLSID_CAsfPropertiesObjectV1,
    0x2df6b870,0x8836,0x11cf,0xa9,0x04,0x00,0x80,0x5f,0x5c,0x44,0x2b);

DEFINE_GUID_WMC(CLSID_CAsfPropertiesObjectV2,
    0x8cabdca1, 0xa947, 0x11cf, 0x8e, 0xe4, 0x0, 0xc0, 0xc, 0x20, 0x53, 0x65);

DEFINE_GUID_WMC(CLSID_CAsfStreamPropertiesObjectV0,
    0x75b22632,0x668e,0x11cf,0xa6,0xd9,0x00,0xaa,0x00,0x62,0xce,0x6c);

DEFINE_GUID_WMC(CLSID_CAsfStreamPropertiesObjectV1,
    0xb7dc0791, 0xa9b7, 0x11cf, 0x8e, 0xe6, 0x0, 0xc0, 0xc, 0x20, 0x53, 0x65);

DEFINE_GUID_WMC(CLSID_CAsfContentDescriptionObjectV0,
    0x75b22633,0x668e,0x11cf,0xa6,0xd9,0x00,0xaa,0x00,0x62,0xce,0x6c);

DEFINE_GUID_WMC(CLSID_CAsfMarkerObjectV0,
    0xf487cd01, 0xa951, 0x11cf, 0x8e, 0xe6, 0x0, 0xc0, 0xc, 0x20, 0x53, 0x65);

DEFINE_GUID_WMC(CLSID_CAsfIndexObjectV0,
    0x75b22634,0x668e,0x11cf,0xa6,0xd9,0x00,0xaa,0x00,0x62,0xce,0x6c);

DEFINE_GUID_WMC(CLSID_CAsfIndexObjectV1, // obsolete
    0xdb92ea11, 0xa951, 0x11cf, 0x8e, 0xe6, 0x0, 0xc0, 0xc, 0x20, 0x53, 0x65);

DEFINE_GUID_WMC(CLSID_CAsfIndexObjectV2,
    0x33000890, 0xe5b1, 0x11cf, 0x89, 0xf4, 0x0, 0xa0, 0xc9, 0x3, 0x49, 0xcb);

DEFINE_GUID_WMC(CLSID_CAsfErrorCorrectionObjectV0,
    0x75b22635,0x668e,0x11cf,0xa6,0xd9,0x00,0xaa,0x00,0x62,0xce,0x6c);

DEFINE_GUID_WMC(CLSID_CAsfDataObjectV0,
    0x75b22636,0x668e,0x11cf,0xa6,0xd9,0x00,0xaa,0x00,0x62,0xce,0x6c);

DEFINE_GUID_WMC(CLSID_CAsfFramesObjectV0,
    0x75b22637,0x668e,0x11cf,0xa6,0xd9,0x00,0xaa,0x00,0x62,0xce,0x6c);

DEFINE_GUID_WMC(CLSID_CAsfClockObjectV0,
    0x5fbf03b5, 0xa92e, 0x11cf, 0x8e, 0xe3, 0x0, 0xc0, 0xc, 0x20, 0x53, 0x65);

DEFINE_GUID_WMC(CLSID_CAsfStreamRoutingObjectV0,
    0x6ba83691, 0xb8d7, 0x11cf, 0x96, 0xc, 0x0, 0xa0, 0xc9, 0xa, 0x8e, 0x34);

// {1EFB1A30-0B62-11d0-A39B-00A0C90348F6}
DEFINE_GUID_WMC(CLSID_CAsfScriptCommandObjectV0,
    0x1efb1a30, 0xb62, 0x11d0, 0xa3, 0x9b, 0x0, 0xa0, 0xc9, 0x3, 0x48, 0xf6);

// {4B1ACBE3-100B-11d0-A39B-00A0C90348F6}
DEFINE_GUID_WMC(CLSID_AsfXScriptCommandIndex,
            0x4b1acbe3,0x100b,0x11d0,0xa3,0x9b,0x0,0xa0,0xc9,0x3,0x48,0xf6);

// {86D15240-311D-11d0-A3A4-00A0C90348F6}
DEFINE_GUID_WMC(CLSID_CAsfCodecObjectV0,
    0x86d15240, 0x311d, 0x11d0, 0xa3, 0xa4, 0x0, 0xa0, 0xc9, 0x3, 0x48, 0xf6);

//
// ASF Mutual Exclusion Object == {0xD6E229DC-35DA-11D1-9034-00A0C90349BE}
//
DEFINE_GUID_WMC( CLSID_CAsfMutualExclusionObject,
    0xD6E229DC, 0x35DA, 0x11D1, 0x90, 0x34, 0x00, 0xA0, 0xC9, 0x03, 0x49, 0xBE );

//
// Same content different bitrates == {0xD6E22A01-35DA-11D1-9034-00A0C90349BE}
//
DEFINE_GUID_WMC( CLSID_SameContentDifferentBitrates,
    0xD6E22A01, 0x35DA, 0x11D1, 0x90, 0x34, 0x00, 0xA0, 0xC9, 0x03, 0x49, 0xBE );

//
// ASF Extended Stream Properties Object == {7BF875CE-468D-11d1-8D82-006097C9A2B2}
//
DEFINE_GUID_WMC( CLSID_CAsfExtendedStreamPropertiesObject,
    0x7bf875ce, 0x468d, 0x11d1, 0x8d, 0x82, 0x0, 0x60, 0x97, 0xc9, 0xa2, 0xb2 );

//
// ASF Content Branding Object == {2211B3FA-BD23-11d2-B4B7-00A0C955FC6E}
//
DEFINE_GUID_WMC( CLSID_CAsfContentBrandingObject,
    0x2211b3fa, 0xbd23, 0x11d2, 0xb4, 0xb7, 0x0, 0xa0, 0xc9, 0x55, 0xfc, 0x6e );

//
// ASF Content Encryption Object == {2211B3FB-BD23-11d2-B4B7-00A0C955FC6E}
//
DEFINE_GUID_WMC( CLSID_CAsfContentEncryptionObject,
    0x2211b3fb, 0xbd23, 0x11d2, 0xb4, 0xb7, 0x0, 0xa0, 0xc9, 0x55, 0xfc, 0x6e );

DEFINE_GUID_WMC( CLSID_CAsfContentEncryptionObjectEx,
    0x298ae614, 0x2622, 0x4c17, 0xb9, 0x35, 0xda, 0xe0, 0x7e, 0xe9, 0x28, 0x9c);

//
// ASF Content Encryption Object Ex2 == {FF889EF1-ADEE-40DA-9E71-98704BB928CE}
//
DEFINE_GUID_WMC( CLSID_CAsfContentEncryptionObjectEx2,
    0xff889ef1, 0xadee, 0x40da, 0x9e, 0x71, 0x98, 0x70, 0x4b, 0xb9, 0x28, 0xce);

//
// ASF  Mercury Rep Data
//
DEFINE_GUID_WMC( CLSID_CAsfMercuryRepData,
    0x8484f884, 0x62e6, 0x4073, 0x97, 0x44, 0x28, 0x96, 0x71, 0xce, 0xb0, 0x16);
//
// ASF Digital Signature Object == {2211B3FC-BD23-11d2-B4B7-00A0C955FC6E}
//
DEFINE_GUID_WMC( CLSID_CAsfDigitalSignatureObject,
    0x2211b3fc, 0xbd23, 0x11d2, 0xb4, 0xb7, 0x0, 0xa0, 0xc9, 0x55, 0xfc, 0x6e );

//
// ASF Extended Content Desc Object == {D2D0A440-E307-11d2-97F0-00A0C95EA850}
//
DEFINE_GUID_WMC( CLSID_CAsfExtendedContentDescObject,
    0xd2d0a440, 0xe307, 0x11d2, 0x97, 0xf0, 0x0, 0xa0, 0xc9, 0x5e, 0xa8, 0x50);

// Clock types

// {ABD3D211-A9BA-11cf-8EE6-00C00C205365}
DEFINE_GUID_WMC(CLSID_CAsfPacketClock1,
    0xabd3d211, 0xa9ba, 0x11cf, 0x8e, 0xe6, 0x0, 0xc0, 0xc, 0x20, 0x53, 0x65);

// {ABD3D213-A9BA-11cf-8EE6-00C00C205365}
DEFINE_GUID_WMC(CLSID_CAsfPacketClock2,
    0xabd3d213, 0xa9ba, 0x11cf, 0x8e, 0xe6, 0x0, 0xc0, 0xc, 0x20, 0x53, 0x65);

// {ABD3D214-A9BA-11cf-8EE6-00C00C205365}
DEFINE_GUID_WMC(CLSID_CAsfPacketClock3,
    0xabd3d214, 0xa9ba, 0x11cf, 0x8e, 0xe6, 0x0, 0xc0, 0xc, 0x20, 0x53, 0x65);

// marker support
//
// {4CFEDB20-75F6-11cf-9C0F-00A0C90349CB}
DEFINE_GUID_WMC( CLSID_AsfXMarkerIndex, 0x4cfedb20, 0x75f6, 0x11cf, 0x9c, 0xf, 0x0, 0xa0, 0xc9, 0x3, 0x49, 0xcb);

DEFINE_GUID_WMC( CLSID_CAsfLicenseStoreObject,
    0x8fa7857b, 0xddc0, 0x11d3, 0xb6, 0xbd, 0x0, 0xc0, 0x4f, 0x61, 0xd, 0x62);


DEFINE_GUID_WMC(CLSID_AsfXNPlus1Parity,
    0x541d0f50,0x5b4b,0x11cf,0xa8,0xfd,0x00,0x80,0x5f,0x5c,0x44,0x2b);

DEFINE_GUID_WMC(CLSID_CAsfIndexObjectV2New,
    0xd6e229d3, 0x35da, 0x11d1, 0x90, 0x34, 0x0, 0xa0, 0xc9, 0x3, 0x49, 0xbe);

/*
 * ======================================================================
 * A Null error masking strategy for use until we get smarter.
 * ======================================================================
 */

DEFINE_GUID_WMC(CLSID_AsfXNullErrorMaskingStrategy,
    0x20fb5700,0x5b55,0x11cf,0xa8,0xfd,0x00,0x80,0x5f,0x5c,0x44,0x2b);

DEFINE_GUID_WMC(CLSID_AsfXAcmAudioErrorMaskingStrategy,
    0xbfc3cd50,0x618f,0x11cf,0x8b,0xb2,0x00,0xaa,0x00,0xb4,0xe2,0x20);

// {49F1A440-4ECE-11d0-A3AC-00A0C90348F6}
DEFINE_GUID_WMC(CLSID_AsfXSignatureAudioErrorMaskingStrategy,
    0x49f1a440, 0x4ece, 0x11d0, 0xa3, 0xac, 0x0, 0xa0, 0xc9, 0x3, 0x48, 0xf6);

DEFINE_GUID_WMC(CLSID_AsfXStreamTypeAcmAudio,
    0xf8699e40,0x5b4d,0x11cf,0xa8,0xfd,0x00,0x80,0x5f,0x5c,0x44,0x2b);

DEFINE_GUID_WMC(CLSID_AsfXStreamTypeUncompressedDibVideo,
    0x3725b2e0,0x5b4e,0x11cf,0xa8,0xfd,0x00,0x80,0x5f,0x5c,0x44,0x2b);

DEFINE_GUID_WMC(CLSID_AsfXStreamTypeIcmVideo,
    0xbc19efc0,0x5b4d,0x11cf,0xa8,0xfd,0x00,0x80,0x5f,0x5c,0x44,0x2b);

DEFINE_GUID_WMC(CLSID_AsfXStreamTypeJpegJfifVideo,
    0xb61be100,0x5b4e,0x11cf,0xa8,0xfd,0x00,0x80,0x5f,0x5c,0x44,0x2b);

DEFINE_GUID_WMC(CLSID_AsfXStreamTypeAnsiUrl,
    0x14082850,0x5b4f,0x11cf,0xa8,0xfd,0x00,0x80,0x5f,0x5c,0x44,0x2b);

DEFINE_GUID_WMC(CLSID_AsfXStreamTypeDegradableJpeg,
    0x35907de0,0xe415,0x11cf,0xa9,0x17,0x00,0x80,0x5f,0x5c,0x44,0x2b);

// {59DACFC0-59E6-11d0-A3AC-00A0C90348F6}
DEFINE_GUID_WMC(CLSID_AsfXStreamTypeScriptCommand,
    0x59dacfc0, 0x59e6, 0x11d0, 0xa3, 0xac, 0x0, 0xa0, 0xc9, 0x3, 0x48, 0xf6);


// {86D15241-311D-11d0-A3A4-00A0C90348F6}
DEFINE_GUID_WMC(CLSID_AsfXCodecList,
    0x86d15241, 0x311d, 0x11d0, 0xa3, 0xa4, 0x0, 0xa0, 0xc9, 0x3, 0x48, 0xf6);

//
// Good old SCR and duration clock license
//
// {97F6F860-747E-11cf-9C0F-00A0C90349CB}
DEFINE_GUID_WMC( CLSID_AsfXPacketClock, 0x97f6f860, 0x747e, 0x11cf, 0x9c, 0xf, 0x0, 0xa0, 0xc9, 0x3, 0x49, 0xcb );

//DEFINE_GUID_WMC( CLSID_AsfXMetaDataObject, 0xa69609e7, 0x517b, 0x11d2, 0xb6, 0xaf, 0x00, 0xc0, 0x4f, 0xd9, 0x08, 0xe9 );

DEFINE_GUID_WMC( CLSID_AsfXMetaDataObject, 0xC5F8CBEA, 0x5BAF, 0x4877, 0x84, 0x67, 0xAA, 0x8C, 0x44, 0xFA, 0x4C, 0xCA );

DEFINE_GUID_WMC( CLSID_CAsfStreamPropertiesObjectEx,0x14e6a5cb, 0xc672, 0x4332, 0x83, 0x99, 0xa9, 0x69, 0x52, 0x6, 0x5b, 0x5a);


#endif //__ASFGUIDS__
//#pragma pack ()

